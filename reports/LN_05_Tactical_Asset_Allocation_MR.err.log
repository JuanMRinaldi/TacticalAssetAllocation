Traceback (most recent call last):
  File "/Users/martinrinaldi/opt/anaconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/martinrinaldi/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/martinrinaldi/opt/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/martinrinaldi/opt/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/martinrinaldi/opt/anaconda3/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/martinrinaldi/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/martinrinaldi/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/martinrinaldi/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def plot_predictive_regression(X, assets, predictors, training_period, testing_period, periods):
    """
    Generate plots illustrating the in-sample and out-of-sample predictive regression R^2 values
    for each asset.

    Args:
        X (pd.DataFrame): DataFrame containing predictor variables.
        assets (dict): Dictionary with keys as asset names and values as pd.Series of asset returns.
        predictors (list): List of predictor column names to include in the regression.
        training_period (tuple): Start and end years for the training period.
        testing_period (tuple): Start and end years for the testing period.
        periods (dict): Dictionary specifying the periods for regression.
    """
    training_start, training_end = training_period
    testing_start, testing_end = testing_period

    for asset_name, Y in assets.items():
        Y_train = Y[training_start:training_end]
        Y_test = Y[testing_start:testing_end]
        X_train = X[training_start:training_end]
        X_test = X[testing_start:testing_end]

        # Running predictive regression for the training period
        train_results = predictive_regression(X_train, Y_train, predictors, periods)
        test_results = predictive_regression(X_test, Y_test, predictors, periods)

        # Assuming the focus is on annual ('Y') predictions for simplicity in visualization
        r2_train = train_results[train_results['Interval'] == 'Y']['R^2'].mean()
        r2_test = test_results[test_results['Interval'] == 'Y']['R^2'].mean()

        plt.figure(figsize=(10, 6))
        plt.bar(['In-Sample (1941-1971)', 'Out-of-Sample (1972-1987)'], [r2_train, r2_test], color=['skyblue', 'salmon'])
        plt.title(f'{asset_name} - Predictive Regression R^2 Comparison')
        plt.ylabel('Average R^2 Value')
        plt.ylim(0, 1)  # Assuming R^2 values are normalized
        plt.show()

# Define the training and testing periods
training_period = ('1941', '1971')
testing_period = ('1972', '1987')

# Execute the plotting function
plot_predictive_regression(X, assets, predictors, training_period, testing_period, periods)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[19], line 43[0m
[1;32m     40[0m testing_period [38;5;241m=[39m ([38;5;124m'[39m[38;5;124m1972[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m1987[39m[38;5;124m'[39m)
[1;32m     42[0m [38;5;66;03m# Execute the plotting function[39;00m
[0;32m---> 43[0m [43mplot_predictive_regression[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43massets[49m[43m,[49m[43m [49m[43mpredictors[49m[43m,[49m[43m [49m[43mtraining_period[49m[43m,[49m[43m [49m[43mtesting_period[49m[43m,[49m[43m [49m[43mperiods[49m[43m)[49m

Cell [0;32mIn[19], line 17[0m, in [0;36mplot_predictive_regression[0;34m(X, assets, predictors, training_period, testing_period, periods)[0m
[1;32m     14[0m training_start, training_end [38;5;241m=[39m training_period
[1;32m     15[0m testing_start, testing_end [38;5;241m=[39m testing_period
[0;32m---> 17[0m [38;5;28;01mfor[39;00m asset_name, Y [38;5;129;01min[39;00m [43massets[49m[38;5;241;43m.[39;49m[43mitems[49m():
[1;32m     18[0m     Y_train [38;5;241m=[39m Y[training_start:training_end]
[1;32m     19[0m     Y_test [38;5;241m=[39m Y[testing_start:testing_end]

[0;31mAttributeError[0m: 'numpy.ndarray' object has no attribute 'items'
AttributeError: 'numpy.ndarray' object has no attribute 'items'

